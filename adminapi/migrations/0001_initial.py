# Generated by Django 4.2.5 on 2024-06-29 14:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('manager', 'manager'), ('employee', 'employee'), ('teamlead', 'teamlead')], default='employee', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Project_assign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_part', models.CharField(choices=[('Frond end', 'Frond end'), ('Back end', 'Back end')], max_length=100)),
                ('status', models.CharField(choices=[('In progress', 'In progress'), ('completed', 'completed')], default='In progress', max_length=50)),
                ('projectassigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminapi.project_assign')),
            ],
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('end_date', models.DateField()),
                ('project_status', models.CharField(choices=[('pending', 'pending'), ('Ongoing', 'Ongoing'), ('completed', 'completed')], default='pending', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TaskChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField()),
                ('total_days', models.IntegerField()),
                ('project_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminapi.projectdetail')),
            ],
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=200)),
                ('email_address', models.CharField(max_length=100)),
                ('phoneno', models.PositiveIntegerField()),
                ('home_address', models.CharField(max_length=100)),
                ('job_title', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('linkedin_profile', models.CharField(max_length=100)),
                ('resume', models.ImageField(null=True, upload_to='images')),
                ('start_date', models.DateField(auto_now_add=True)),
                ('in_team', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('adminapi.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=200)),
                ('email_address', models.CharField(max_length=100)),
                ('phoneno', models.PositiveIntegerField()),
                ('home_address', models.CharField(max_length=100)),
                ('job_title', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('prefferred_timezone', models.CharField(max_length=100)),
                ('linkedin_profile', models.CharField(max_length=100)),
                ('skills', models.CharField(max_length=100)),
                ('certification', models.ImageField(null=True, upload_to='images')),
                ('experience', models.ImageField(null=True, upload_to='images')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('adminapi.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TeamLead',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=200)),
                ('email_address', models.CharField(max_length=100)),
                ('phoneno', models.PositiveIntegerField()),
                ('home_address', models.CharField(max_length=100)),
                ('job_title', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('prefferred_timezone', models.CharField(max_length=100)),
                ('linkedin_profile', models.CharField(max_length=100)),
                ('skills', models.CharField(max_length=100)),
                ('certification', models.ImageField(null=True, upload_to='images')),
                ('experience', models.ImageField(null=True, upload_to='images')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('adminapi.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectUpdates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminapi.projects')),
            ],
        ),
        migrations.AddField(
            model_name='project_assign',
            name='project',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='adminapi.projects'),
        ),
        migrations.AddField(
            model_name='project_assign',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminapi.teams'),
        ),
        migrations.AddField(
            model_name='teams',
            name='members',
            field=models.ManyToManyField(to='adminapi.employee'),
        ),
        migrations.AddField(
            model_name='teams',
            name='teamlead',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='adminapi.teamlead'),
        ),
        migrations.CreateModel(
            name='TaskUpdateChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminapi.taskchart')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminapi.employee')),
            ],
        ),
        migrations.AddField(
            model_name='taskchart',
            name='assigned_person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='adminapi.employee'),
        ),
        migrations.AddField(
            model_name='projectdetail',
            name='assigned_person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='adminapi.employee'),
        ),
        migrations.AddField(
            model_name='projectdetail',
            name='teamlead',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminapi.teamlead'),
        ),
        migrations.AddField(
            model_name='project_assign',
            name='teamlead',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminapi.teamlead'),
        ),
        migrations.CreateModel(
            name='Performance_assign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('performance', models.FloatField()),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='adminapi.employee')),
                ('teamlead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminapi.teamlead')),
            ],
        ),
    ]
